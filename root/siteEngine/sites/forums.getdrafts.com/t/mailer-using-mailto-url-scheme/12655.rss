<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Mailer Using mailto: URL Scheme</title>
    <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655</link>
    <description>I&#39;m trying to modify [Spark Mailer v2](https://directory.getdrafts.com/a/1yz) to use the [mailto URL scheme](https://datatracker.ietf.org/doc/html/rfc6068) instead of the [Spark URL Scheme](https://talk.automators.fm/t/which-ios-email-apps-support-automation-shortcuts-url-schemes-x-callback-url/3552/9).  The reason for making the conversion is that apparently using mailto allows &amp;lt;newline&amp;gt; characters embedded into the &amp;lt;body&amp;gt; whereas they are ignored using the Spark (and perhaps all other email) URL Schemes.  ([Details here](https://forums.getdrafts.com/t/need-spark-action-that-sends-copies/12486/21?u=nello).) 

Here&#39;s the test code I&#39;m using:


```
// Test data - Remove
let strNicknameList = &quot;nicknameList&quot;
let strEmailTo = &quot;nameTo1&lt;acctTo1@domain.tld&gt;&quot;
let strEmailCc = &quot;nameCC1&lt;acctCC1@domain.tld&gt;&quot;
let strEmailBcc = &quot;nameBCC1&lt;acctBCC1@domain.tld&gt;&quot;
let strPageTitle = &quot;pageTitle&quot;;
let strPageURL = &quot;pageURL&quot;;
let strPageSelection = &quot;pageSelection&quot;;


// Build and call the mailto URL
// Use the callback object to make adding parameters easier ... but *NOT* running as a call back.
// Base settings
let cburlMailto = CallbackURL.create();
cburlMailto.waitForResponse = false;
cburlMailto.baseURL = &quot;mailto:&quot; + strEmailTo;
// Who else gets it
if (strEmailCc != &quot;&quot;) cburlMailto.addParameter(&quot;cc&quot;, strEmailCc);
if (strEmailBcc != &quot;&quot;) cburlMailto.addParameter(&quot;bcc&quot;, strEmailBcc);
// Subject line
cburlMailto.addParameter(&quot;subject&quot;, strPageTitle);
// Body
cburlMailto.addParameter(&quot;body&quot;,`${strNicknameList}

${strPageURL}


${strPageSelection}`);

// Log Url string - Remove
console.log(&quot;cburlMailto: &quot; + cburlMailto());

// Open default mailer
cburlMailto.open();
```

My problem is trying to display the string built in `cburlMailto`.

How do I log it on the console or display it in an alert?</description>
    
    <lastBuildDate>Sat, 14 May 2022 07:59:00 +0000</lastBuildDate>
    <category>Actions - Help &amp; Questions</category>
    <atom:link href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Mailer Using mailto: URL Scheme</title>
        <dc:creator><![CDATA[sylumer]]></dc:creator>
        <description><![CDATA[
            <p>If you look back at my previous post you will see I did modify the base URL to get it to run.</p>
<p>I’ve included the equivalent version reworked to match your additional logging so you can see the progression.</p>

Reveal additional detail <a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/6">(click for more details)</a>
          <p><a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/6">Read full topic</a></p>
        ]]></description>
        <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/6</link>
        <pubDate>Sat, 14 May 2022 07:59:00 +0000</pubDate>
        <guid isPermaLink="false">forums.getdrafts.com-post-12655-6</guid>
        <source url="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss">Mailer Using mailto: URL Scheme</source>
      </item>
      <item>
        <title>Mailer Using mailto: URL Scheme</title>
        <dc:creator><![CDATA[nello]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="sylumer" data-post="4" data-topic="12655" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forums.getdrafts.com/user_avatar/forums.getdrafts.com/sylumer/40/2731_2.png" class="avatar"> sylumer:</div>
<blockquote>
<p>… this still opens my mail client with the details populated and the desired console output.</p>
</blockquote>
</aside>
<p>My problem with logging was that <code>Log Level</code> was set for <code>Errors</code> instead of <code>All</code>.   All my <code>console.log()</code> statements appear in the Action Log now.   <img src="https://forums.getdrafts.com/images/emoji/apple/partying_face.png?v=12" title=":partying_face:" class="emoji" alt=":partying_face:" loading="lazy" width="20" height="20"></p>
<p>Now here’s my code with <code>console.log()</code> statements at each step of the URL scheme build.  (This reminds me of debugging programs in my FORTRAN class during my senior year of high school by inserting PRINT statements between every card of  my deck of 80-column punched cards.  <img src="https://forums.getdrafts.com/images/emoji/apple/wink.png?v=12" title=":wink:" class="emoji" alt=":wink:" loading="lazy" width="20" height="20">)</p>
<pre><code class="lang-auto">console.log("enter script");

// Test data - Remove
let strNicknameList = "nicknameList"
let strEmailTo = "nameTo1&lt;acctTo1@domain.tld&gt;"
let strEmailCc = "nameCC1&lt;acctCC1@domain.tld&gt;"
let strEmailBcc = "nameBCC1&lt;acctBCC1@domain.tld&gt;"
let strPageTitle = "pageTitle";
let strPageURL = "pageURL";
let strPageSelection = "pageSelection";
let strBody = `${strNicknameList}

${strPageURL}


${strPageSelection}`;



// Build and call the mailto URL
// Use the callback object to make adding parameters easier ... but *NOT* running as a call back.
// Base settings
let cburlMailto = CallbackURL.create();

console.log("after let cburlMailto = CallbackURL.create();");
console.log("cburlMailto: " + cburlMailto.url);

cburlMailto.waitForResponse = false;

console.log("after cburlMailto.waitForResponse = false;");
console.log("cburlMailto: " + cburlMailto.url);

cburlMailto.baseURL = "mailto:" + strEmailTo;

console.log("strEmailTo: " + strEmailTo);
console.log("after cburlMailto.baseURL = \"mailto:\" + strEmailTo");
console.log("cburlMailto: " + cburlMailto.url);

// Who else gets it
if (strEmailCc != "") cburlMailto.addParameter("cc", strEmailCc);

console.log("strEmailCc: " + strEmailCc);
console.log("after cburlMailto.addParameter(\"cc\", strEmailCc);");
console.log("cburlMailto: " + cburlMailto.url);

if (strEmailBcc != "") cburlMailto.addParameter("bcc", strEmailBcc);

console.log("strEmailBcc: " + strEmailBcc);
console.log("after cburlMailto.addParameter(\"bcc\", strEmailBcc);");
console.log("cburlMailto: " + cburlMailto.url);

// Subject line
cburlMailto.addParameter("subject", strPageTitle);

console.log("strPageTitle: " + strPageTitle);
console.log("after cburlMailto.addParameter(\"subject\", strPageTitle);");
console.log("cburlMailto: " + cburlMailto.url);

// Body
cburlMailto.addParameter("body", strBody);

console.log("strBody: " + strBody);
console.log("after cburlMailto.addParameter(\"body\", strBody);");
console.log("cburlMailto: " + cburlMailto.url);



// Open default mailer
console.log("before cburlMailto.open()");
cburlMailto.open();
console.log("after cburlMailto.open()");
console.log("exit script");
</code></pre>
<p>Here’s the Action Log:</p>
<pre><code class="lang-auto">Script step completed.
enter script
after let cburlMailto = CallbackURL.create();
cburlMailto: ?
after cburlMailto.waitForResponse = false;
cburlMailto: ?
strEmailTo: nameTo1&lt;acctTo1@domain.tld&gt;
after cburlMailto.baseURL = "mailto:" + strEmailTo
cburlMailto: undefined
strEmailCc: nameCC1&lt;acctCC1@domain.tld&gt;
after cburlMailto.addParameter("cc", strEmailCc);
cburlMailto: undefined
strEmailBcc: nameBCC1&lt;acctBCC1@domain.tld&gt;
after cburlMailto.addParameter("bcc", strEmailBcc);
cburlMailto: undefined
strPageTitle: pageTitle
after cburlMailto.addParameter("subject", strPageTitle);
cburlMailto: undefined
strBody: nicknameList

pageURL


pageSelection
after cburlMailto.addParameter("body", strBody);
cburlMailto: undefined
before cburlMailto.open()
after cburlMailto.open()
exit script
Script step completed.
Draft moved to trash
</code></pre>
<p>As you can see, there’s something wrong with:<br>
<code>cburlMailto.baseURL = "mailto:" + strEmailTo</code></p>
<p>Moreover, <code>cburlMailto.open()</code> still is not opening any mailer.</p>
<p>UPDATE <span data-date="2022-05-13" data-time="17:24:00" class="discourse-local-date" data-format="LLL" data-timezone="America/Chicago" data-email-preview="2022-05-13T22:24:00Z UTC">2022-05-13T22:24:00Z UTC</span></p>
<p>I fixed it by adding the following towards the top:</p>
<p><code>let strBaseURL = "mailto:" + encodeURI(strEmailTo);</code></p>
<p>And changing:</p>
<p><code>cburlMailto.baseURL = "mailto:" + strEmailTo</code><br>
to<br>
<code>cburlMailto.baseURL = strBaseURL;</code></p>
<p>Now the Action Log shows the mailto URL being built correctly:</p>
<pre><code class="lang-auto">Script step completed.
enter script
after let cburlMailto = CallbackURL.create();
cburlMailto: ?
after cburlMailto.waitForResponse = false;
cburlMailto: ?
strBaseURL: mailto:nameTo1%3CacctTo1@domain.tld%3E
after cburlMailto.baseURL = strBaseURL
cburlMailto: mailto:nameTo1%3CacctTo1@domain.tld%3E?
strEmailCc: nameCC1&lt;acctCC1@domain.tld&gt;
after cburlMailto.addParameter("cc", strEmailCc);
cburlMailto: mailto:nameTo1%3CacctTo1@domain.tld%3E?cc=nameCC1%3CacctCC1@domain.tld%3E
strEmailBcc: nameBCC1&lt;acctBCC1@domain.tld&gt;
after cburlMailto.addParameter("bcc", strEmailBcc);
cburlMailto: mailto:nameTo1%3CacctTo1@domain.tld%3E?bcc=nameBCC1%3CacctBCC1@domain.tld%3E&amp;cc=nameCC1%3CacctCC1@domain.tld%3E
strPageTitle: pageTitle
after cburlMailto.addParameter("subject", strPageTitle);
cburlMailto: mailto:nameTo1%3CacctTo1@domain.tld%3E?subject=pageTitle&amp;bcc=nameBCC1%3CacctBCC1@domain.tld%3E&amp;cc=nameCC1%3CacctCC1@domain.tld%3E
strBody: nicknameList

pageURL


pageSelection
after cburlMailto.addParameter("body", strBody);
cburlMailto: mailto:nameTo1%3CacctTo1@domain.tld%3E?cc=nameCC1%3CacctCC1@domain.tld%3E&amp;bcc=nameBCC1%3CacctBCC1@domain.tld%3E&amp;subject=pageTitle&amp;body=nicknameList%0A%0ApageURL%0A%0A%0ApageSelection
before cburlMailto.open()
after cburlMailto.open()
exit script
Script step completed.
Draft moved to trash
</code></pre>
<p>On my iPhone 12 Pro running iOS 15.4.1 at least, setting the <code>cburlMailto.baseURL</code> property requires URL encoding whereas the method <code>cburlMailto.addParameter()</code>does NOT require URL encoding.</p>
<p>I guess it’s unusual for the base URL to have characters that require encoding.   <img src="https://forums.getdrafts.com/images/emoji/apple/thinking.png?v=12" title=":thinking:" class="emoji" alt=":thinking:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/5">Read full topic</a></p>
        ]]></description>
        <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/5</link>
        <pubDate>Fri, 13 May 2022 20:55:21 +0000</pubDate>
        <guid isPermaLink="false">forums.getdrafts.com-post-12655-5</guid>
        <source url="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss">Mailer Using mailto: URL Scheme</source>
      </item>
      <item>
        <title>Mailer Using mailto: URL Scheme</title>
        <dc:creator><![CDATA[sylumer]]></dc:creator>
        <description><![CDATA[
            <p>Note that mailto isn’t really an x-callback-url. It’s kind of an ugly coersion, but this still opens my mail client with the details populated and the desired console output.</p>
<pre><code class="lang-auto">// Test data - Remove
let strNicknameList = "nicknameList"
let strEmailTo = "nameTo1&lt;acctTo1@domain.tld&gt;"
let strEmailCc = "nameCC1&lt;acctCC1@domain.tld&gt;"
let strEmailBcc = "nameBCC1&lt;acctBCC1@domain.tld&gt;"
let strPageTitle = "pageTitle";
let strPageURL = "pageURL";
let strPageSelection = "pageSelection";

// Build and call the mailto URL
// Use the callback object to make adding parameters easier ... but *NOT* running as a call back.
// Base settings
let cburlMailto = CallbackURL.create();
cburlMailto.waitForResponse = false;
cburlMailto.baseURL = "mailto:";
cburlMailto.addParameter("to", strEmailTo);

// Who else gets it
if (strEmailCc != "") cburlMailto.addParameter("cc", strEmailCc);
if (strEmailBcc != "") cburlMailto.addParameter("bcc", strEmailBcc);

// Subject line
cburlMailto.addParameter("subject", strPageTitle);

// Body
cburlMailto.addParameter("body",`${strNicknameList}

${strPageURL}


${strPageSelection}`);

// Log Url string - Remove
console.log("cburlMailto: " + cburlMailto.url);

// Open default mailer
cburlMailto.open();
</code></pre>
          <p><a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/4">Read full topic</a></p>
        ]]></description>
        <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/4</link>
        <pubDate>Fri, 13 May 2022 19:03:30 +0000</pubDate>
        <guid isPermaLink="false">forums.getdrafts.com-post-12655-4</guid>
        <source url="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss">Mailer Using mailto: URL Scheme</source>
      </item>
      <item>
        <title>Mailer Using mailto: URL Scheme</title>
        <dc:creator><![CDATA[nello]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="sylumer" data-post="2" data-topic="12655" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forums.getdrafts.com/user_avatar/forums.getdrafts.com/sylumer/40/2731_2.png" class="avatar"> sylumer:</div>
<blockquote>
<p>Try <code>console.log("cburlMailto: " + cburlMailto.url);</code>.</p>
</blockquote>
</aside>
<p>Thank you for the link to the <a href="https://scripting.getdrafts.com/classes/callbackurl#url" rel="noopener nofollow ugc"> CallbackURL documentation</a>.</p>
<p>I added the line that you suggested.  Now no error messages pop up when I run the action, but there also is no entry in the <a href="https://docs.getdrafts.com/docs/actions/action-log.html" rel="noopener nofollow ugc">console</a>.</p>
<p>I added this alert:</p>
<p><code>alert("cburlMailto: " + cburlMailto.url);</code></p>
<p>When I run the action, the alert that pops up says:</p>
<p><code>cburlMailto: undefined</code></p>
<p>I don’t understand.</p>
<p>If <code>cburlMailto.url</code> is really undefined, then why does my script run with out popping up an error?</p>
          <p><a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/3">Read full topic</a></p>
        ]]></description>
        <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/3</link>
        <pubDate>Fri, 13 May 2022 18:31:35 +0000</pubDate>
        <guid isPermaLink="false">forums.getdrafts.com-post-12655-3</guid>
        <source url="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss">Mailer Using mailto: URL Scheme</source>
      </item>
      <item>
        <title>Mailer Using mailto: URL Scheme</title>
        <dc:creator><![CDATA[sylumer]]></dc:creator>
        <description><![CDATA[
            <p>Try <code>console.log("cburlMailto: " + cburlMailto.url);</code>.</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://scripting.getdrafts.com/classes/callbackurl#url">
  <header class="source">

      <a href="https://scripting.getdrafts.com/classes/callbackurl#url" target="_blank" rel="noopener">scripting.getdrafts.com</a>
  </header>

  <article class="onebox-body">
    

<h3><a href="https://scripting.getdrafts.com/classes/callbackurl#url" target="_blank" rel="noopener">CallbackURL | Drafts Script Reference</a></h3>

  <p>Documentation for Drafts Script Reference</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/2">Read full topic</a></p>
        ]]></description>
        <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/2</link>
        <pubDate>Fri, 13 May 2022 05:14:07 +0000</pubDate>
        <guid isPermaLink="false">forums.getdrafts.com-post-12655-2</guid>
        <source url="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss">Mailer Using mailto: URL Scheme</source>
      </item>
      <item>
        <title>Mailer Using mailto: URL Scheme</title>
        <dc:creator><![CDATA[nello]]></dc:creator>
        <description><![CDATA[
            <p>I’m trying to modify <a href="https://directory.getdrafts.com/a/1yz" rel="noopener nofollow ugc">Spark Mailer v2</a> to use the <a href="https://datatracker.ietf.org/doc/html/rfc6068" rel="noopener nofollow ugc">mailto URL scheme</a> instead of the <a href="https://talk.automators.fm/t/which-ios-email-apps-support-automation-shortcuts-url-schemes-x-callback-url/3552/9" rel="noopener nofollow ugc">Spark URL Scheme</a>.  The reason for making the conversion is that apparently using mailto allows &lt;newline&gt; characters embedded into the &lt;body&gt; whereas they are ignored using the Spark (and perhaps all other email) URL Schemes.  (<a href="https://forums.getdrafts.com/t/need-spark-action-that-sends-copies/12486/21">Details here</a>.)</p>
<p>Here’s the test code I’m using:</p>
<pre><code class="lang-auto">// Test data - Remove
let strNicknameList = "nicknameList"
let strEmailTo = "nameTo1&lt;acctTo1@domain.tld&gt;"
let strEmailCc = "nameCC1&lt;acctCC1@domain.tld&gt;"
let strEmailBcc = "nameBCC1&lt;acctBCC1@domain.tld&gt;"
let strPageTitle = "pageTitle";
let strPageURL = "pageURL";
let strPageSelection = "pageSelection";


// Build and call the mailto URL
// Use the callback object to make adding parameters easier ... but *NOT* running as a call back.
// Base settings
let cburlMailto = CallbackURL.create();
cburlMailto.waitForResponse = false;
cburlMailto.baseURL = "mailto:" + strEmailTo;
// Who else gets it
if (strEmailCc != "") cburlMailto.addParameter("cc", strEmailCc);
if (strEmailBcc != "") cburlMailto.addParameter("bcc", strEmailBcc);
// Subject line
cburlMailto.addParameter("subject", strPageTitle);
// Body
cburlMailto.addParameter("body",`${strNicknameList}

${strPageURL}


${strPageSelection}`);

// Log Url string - Remove
console.log("cburlMailto: " + cburlMailto());

// Open default mailer
cburlMailto.open();
</code></pre>
<p>My problem is trying to display the string built in <code>cburlMailto</code>.</p>
<p>How do I log it on the console or display it in an alert?</p>
          <p><a href="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/1">Read full topic</a></p>
        ]]></description>
        <link>https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655/1</link>
        <pubDate>Fri, 13 May 2022 02:32:59 +0000</pubDate>
        <guid isPermaLink="false">forums.getdrafts.com-post-12655-1</guid>
        <source url="https://forums.getdrafts.com/t/mailer-using-mailto-url-scheme/12655.rss">Mailer Using mailto: URL Scheme</source>
      </item>
  </channel>
</rss>
